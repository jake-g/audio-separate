/*
 * main.cpp
 *
 *  Created on: Apr 28, 2016
 *      Author: jake
 */

#include <iostream>
#include <Eigen/Dense>
#include <Eigen/SVD>
#include <unsupported/Eigen/MatrixFunctions>
#include "separate.h"

#define BUFFER 256  // num cols = num samples
#define SOURCES 2	// num rows = num input sources

using namespace Eigen;
using namespace std;


int main()
{
	// Input
	// audio buffer from two sources (2 row vectors)
	MatrixXd ab(SOURCES, BUFFER);
	ab << 	-0.99219,-0.0625,0.023438,-0.039062,0.015625,-0.039062,0.015625,-0.03125,0.015625,-0.023438,0.015625,-0.015625,0,-0.015625,0,-0.015625,-0.015625,-0.015625,-0.015625,-0.015625,-0.015625,0,0,0,0.0078125,0.0078125,0.0078125,0.0078125,0.0078125,0.0078125,0.0078125,0.0078125,0,0,0,-0.015625,-0.015625,-0.023438,-0.023438,-0.03125,-0.023438,-0.03125,-0.039062,-0.03125,-0.03125,-0.03125,-0.023438,-0.023438,-0.023438,-0.015625,-0.023438,-0.015625,0,0,0.0078125,0.015625,0.023438,0.023438,0.015625,0.015625,0.0078125,0.0078125,0,-0.015625,0,-0.015625,-0.023438,-0.015625,-0.015625,-0.015625,0,-0.015625,-0.023438,-0.015625,0,0,0.0078125,0.0078125,0,-0.015625,-0.015625,-0.015625,-0.015625,0,0.0078125,0,0.0078125,0.0078125,0,0,0,-0.015625,-0.023438,-0.03125,-0.023438,-0.015625,-0.015625,-0.015625,-0.015625,-0.015625,0.078125,0.125,0.14062,0.17188,0.17969,0.19531,0.16406,0.10156,0.085938,0.039062,-0.054688,-0.09375,-0.13281,-0.21094,-0.21875,-0.21094,-0.21094,-0.17969,-0.13281,-0.085938,-0.0625,-0.0078125,0.0078125,0.0078125,0.015625,0,-0.023438,-0.054688,-0.078125,-0.09375,-0.11719,-0.10938,-0.11719,-0.10156,-0.085938,-0.039062,0,0.03125,0.085938,0.125,0.16406,0.19531,0.21094,0.25,0.27344,0.24219,0.21875,0.17969,0.09375,0.023438,0.0078125,-0.0625,-0.11719,-0.11719,-0.14844,-0.17969,-0.14062,-0.125,-0.09375,-0.0625,-0.03125,-0.015625,-0.03125,-0.03125,-0.054688,-0.078125,-0.10938,-0.14062,-0.17188,-0.19531,-0.20312,-0.20312,-0.17969,-0.13281,-0.10156,-0.046875,-0.0078125,0.039062,0.078125,0.10938,0.15625,0.1875,0.1875,0.22656,0.24219,0.24219,0.25781,0.26562,0.22656,0.1875,0.16406,0.09375,0.015625,0.015625,-0.03125,-0.078125,-0.09375,-0.10156,-0.13281,-0.09375,-0.070312,-0.078125,-0.0625,-0.046875,-0.054688,-0.070312,-0.078125,-0.085938,-0.11719,-0.14062,-0.16406,-0.17188,-0.17969,-0.16406,-0.14062,-0.125,-0.078125,-0.023438,-0.0078125,0.039062,0.10938,0.14062,0.16406,0.21094,0.24219,0.24219,0.28906,0.26562,0.22656,0.17969,0.14062,0.085938,0.0078125,-0.046875,-0.078125,-0.15625,-0.17188,-0.17969,-0.1875,-0.17188,-0.13281,-0.11719,-0.11719,-0.078125,-0.10156,-0.10938,-0.10156,-0.10938,-0.13281,-0.11719,-0.125,-0.125,-0.11719,-0.09375,-0.070312,-0.039062,
		-0.92969,-0.054688,0.015625,-0.03125,0.0078125,-0.03125,0.0078125,-0.023438,0.0078125,-0.015625,0.0078125,-0.0078125,0,-0.0078125,0,-0.0078125,-0.0078125,-0.0078125,-0.0078125,-0.0078125,-0.0078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0078125,-0.0078125,-0.015625,-0.015625,-0.023438,-0.015625,-0.023438,-0.03125,-0.023438,-0.023438,-0.023438,-0.015625,-0.015625,-0.015625,-0.0078125,-0.015625,-0.0078125,0,0,0,0.0078125,0.015625,0.015625,0.0078125,0.0078125,0,0,0,-0.0078125,0,-0.0078125,-0.015625,-0.0078125,-0.0078125,-0.0078125,0,-0.0078125,-0.015625,-0.0078125,0,0,0,0,0,-0.0078125,-0.0078125,-0.0078125,-0.0078125,0,0,0,0,0,0,0,0,-0.0078125,-0.015625,-0.023438,-0.015625,-0.0078125,-0.0078125,-0.0078125,-0.0078125,-0.0078125,-0.10938,-0.15625,-0.17188,-0.21094,-0.21875,-0.23438,-0.21875,-0.13281,-0.10156,-0.054688,0.046875,0.09375,0.11719,0.1875,0.21094,0.1875,0.20312,0.17969,0.11719,0.085938,0.070312,0.015625,0,0,-0.0078125,-0.0078125,0.023438,0.039062,0.070312,0.10938,0.13281,0.14062,0.13281,0.13281,0.10156,0.0625,0.039062,-0.0078125,-0.085938,-0.125,-0.17969,-0.23438,-0.25781,-0.28906,-0.3125,-0.28125,-0.26562,-0.21875,-0.14062,-0.046875,-0.023438,0.078125,0.15625,0.17188,0.20312,0.21875,0.17188,0.14062,0.125,0.070312,0.03125,-0.0078125,-0.023438,-0.054688,-0.046875,-0.023438,0.0078125,0.039062,0.078125,0.09375,0.125,0.14062,0.13281,0.11719,0.10156,0.054688,0.015625,-0.03125,-0.070312,-0.125,-0.15625,-0.19531,-0.21094,-0.23438,-0.25,-0.27344,-0.26562,-0.28906,-0.25781,-0.22656,-0.19531,-0.10938,-0.015625,0.0078125,0.078125,0.125,0.14062,0.14844,0.17188,0.15625,0.13281,0.125,0.09375,0.0625,0.085938,0.10156,0.125,0.13281,0.14844,0.15625,0.14844,0.15625,0.16406,0.14844,0.125,0.125,0.0625,0.0078125,-0.039062,-0.10156,-0.16406,-0.20312,-0.25781,-0.32031,-0.33594,-0.35156,-0.38281,-0.375,-0.35156,-0.28125,-0.25781,-0.16406,-0.0625,-0.0078125,0.0625,0.125,0.15625,0.14844,0.17969,0.17969,0.14844,0.15625,0.16406,0.14062,0.14844,0.17969,0.1875,0.21094,0.25,0.25,0.27344,0.27344,0.26562,0.24219,0.20312,0.13281;

	MatrixXd unmixed = separate(ab, BUFFER);

}



//// TODO readCSV fails, returns only 0s
//string data = "mixes.csv";
//MatrixXd ab = readCSV(data, 2, 256);


